# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. REPROGRAMMED FOR ENDER 3 NEO To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.



[mcu]
serial: /dev/serial/by-id/usb_serial_1
restart_method: command

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 235

#position_endstop: -18
#position_min: -18
#position_max: 242
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
#position_endstop: -6
#position_min: -6
#position_max: 238
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -3

[safe_z_home]
home_xy_position: 117.5, 117.5
speed: 50
z_hop: 10                
z_hop_speed: 5

[extruder]
max_extrude_only_distance: 101.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 33.434332
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
pressure_advance = 0.8
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100


[screws_tilt_adjust]
screw1: 74, 42
screw1_name: Front left
screw2: 242, 42
screw2_name: Front right
screw3: 242, 212
screw3_name: Back right
screw4: 74, 212
screw4_name: Back left
screw_thread: CW-M4
horizontal_move_z: 10

[bltouch]
control_pin: PB0
sensor_pin: ^PB1
x_offset: -42
y_offset: -10

[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 15, 15
mesh_max: 200, 200
probe_count: 5,5
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[output_pin beeper]
pin: PC6
pwm: True
value: 0 
shutdown_value: 0 
cycle_time: 0.001 

[respond]
default_type: command
[pause_resume] recover_velocity: 50


## uncomment if you need the sensor
#[filament_switch_sensor RunoutSensor]
#pause_on_runout: True
#runout_gcode: PAUSE
#insert_gcode: RESUME
#switch_pin: PA4

[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F2000
    M84
  CANCEL_PRINT_BASE
  
[gcode_macro START_PRINT]
description: Start the print
gcode:
  {% set HOTEND_TEMP = params.HOTEND_TEMP|default(205)|int %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|int %}
  M104 S{HOTEND_TEMP} ;Heat hot end to temp
  M140 S{BED_TEMP} ;Heat bed to temp
  BED_MESH_PROFILE LOAD=default
  G92 E0 ;Reset Extruder
  G28 ;Home Axis
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
  M109 S{HOTEND_TEMP} ;Wait for bed to heat
  M190 S{BED_TEMP} ;Wait for hotend to heat
  G1 X10.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
  G1 X10.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
  G1 X10.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish

[gcode_macro END_PRINT]
description: End the print
gcode:
  G91 ;Relative positioning
  G1 E-2 F2700 ;Retract a bit
  G1 E-2 Z0.2 F2400 ;Retract and raise Z
  G1 X5 Y5 F3000 ;Wipe out
  G1 Z10 ;Raise Z more
  G90 ;Absolute positioning
  G1 X0 Y235 ;Present print
  M106 S0 ;Turn-off fan
  M104 S0 ;Turn-off hotend
  M140 S0 ;Turn-off bed
  M84 X Y E ;Disable all steppers but Z

[gcode_macro M300]
description: Buzzer
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

[gcode_macro COLOR_CHANGE]
description: M600 Colour Change
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    M300
    M300
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro M600]
description: Change the filament 
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    SET_IDLE_TIMEOUT TIMEOUT=7200
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PIDtuneHOTEND]
description: PID Tune Hot End
gcode:
	{% set TEMP = params.TEMP|default(210)|float %}
	PID_CALIBRATE HEATER=extruder TARGET={TEMP}

[gcode_macro PIDtuneBED]
description: PID Tune Bed
gcode:
    {% set TEMP = params.TEMP|default(60)|float %}
    PID_CALIBRATE HEATER=heater_bed TARGET={TEMP}

[gcode_macro ProbeZOffset]
description: Start probe_calibrate 
gcode:
    G28
    probe_calibrate

[include timelapse.cfg]

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None
spi_speed: 2000000
spi_bus: spidev2.0

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 70
probe_points:
    117.5,117.5,10



#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.480
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.128
#*# pid_ki = 1.690
#*# pid_kd = 108.849
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.969
#*# pid_ki = 1.355
#*# pid_kd = 955.395
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.137500, -0.082500, -0.142500, -0.132500, -0.135000
#*# 	  -0.120000, -0.045000, -0.107500, -0.105000, -0.117500
#*# 	  -0.137500, -0.067500, -0.110000, -0.097500, -0.115000
#*# 	  -0.150000, -0.065000, -0.100000, -0.070000, -0.072500
#*# 	  -0.075000, -0.052500, -0.120000, -0.110000, -0.130000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 200.0
#*# min_y = 15.0
#*# max_y = 200.0
